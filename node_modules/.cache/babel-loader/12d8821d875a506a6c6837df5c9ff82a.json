{"ast":null,"code":"var _jsxFileName = \"/Users/betsy/Projects/mytodos/src/components/App.js\";\nimport React, { Component } from 'react';\n\nclass App extends React.Component {\n  componentDidMount() {\n    const dispatch = this.props.dispatch;\n    dispatch(handleInitialData());\n  }\n\n  render() {\n    if (this.props.loading === true) {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Loading\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(ConnectedTodos, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(ConnectedGoals, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst ConnectedApp = ReactRedux.connect(state => ({\n  loading: state.loading\n}))(App);","map":{"version":3,"sources":["/Users/betsy/Projects/mytodos/src/components/App.js"],"names":["React","Component","App","componentDidMount","dispatch","props","handleInitialData","render","loading","ConnectedApp","ReactRedux","connect","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACC,SAAxB,CAAkC;AAChCE,EAAAA,iBAAiB,GAAG;AAAA,UACVC,QADU,GACG,KAAKC,KADR,CACVD,QADU;AAGlBA,IAAAA,QAAQ,CAACE,iBAAiB,EAAlB,CAAR;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKF,KAAL,CAAWG,OAAX,KAAuB,IAA3B,EAAiC;AAC/B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAjB+B;;AAoBlC,MAAMC,YAAY,GAAGC,UAAU,CAACC,OAAX,CAAoBC,KAAD,KAAY;AAClDJ,EAAAA,OAAO,EAAEI,KAAK,CAACJ;AADmC,CAAZ,CAAnB,EAEjBN,GAFiB,CAArB","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { dispatch } = this.props\n\n    dispatch(handleInitialData())\n  }\n  render() {\n    if (this.props.loading === true) {\n      return <h3>Loading</h3>\n    }\n\n    return (\n      <div>\n        <ConnectedTodos />\n        <ConnectedGoals />\n      </div>\n    )\n  }\n}\n\nconst ConnectedApp = ReactRedux.connect((state) => ({\n  loading: state.loading\n}))(App)"]},"metadata":{},"sourceType":"module"}